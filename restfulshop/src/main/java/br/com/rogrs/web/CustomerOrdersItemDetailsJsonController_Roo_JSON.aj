// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.rogrs.web;

import br.com.rogrs.model.CustomerOrder;
import br.com.rogrs.model.OrderDetail;
import br.com.rogrs.service.api.CustomerOrderService;
import br.com.rogrs.service.api.OrderDetailService;
import br.com.rogrs.web.CustomerOrdersItemDetailsJsonController;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.web.NotFoundException;
import java.util.Collections;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

privileged aspect CustomerOrdersItemDetailsJsonController_Roo_JSON {
    
    declare @type: CustomerOrdersItemDetailsJsonController: @RestController;
    
    declare @type: CustomerOrdersItemDetailsJsonController: @RequestMapping(value = "/customerorders/{customerOrder}/details", name = "CustomerOrdersItemDetailsJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CustomerOrderService CustomerOrdersItemDetailsJsonController.customerOrderService;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private OrderDetailService CustomerOrdersItemDetailsJsonController.orderDetailService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param customerOrderService
     * @param orderDetailService
     */
    @Autowired
    public CustomerOrdersItemDetailsJsonController.new(CustomerOrderService customerOrderService, OrderDetailService orderDetailService) {
        this.customerOrderService = customerOrderService;
        this.orderDetailService = orderDetailService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CustomerOrderService
     */
    public CustomerOrderService CustomerOrdersItemDetailsJsonController.getCustomerOrderService() {
        return customerOrderService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrderService
     */
    public void CustomerOrdersItemDetailsJsonController.setCustomerOrderService(CustomerOrderService customerOrderService) {
        this.customerOrderService = customerOrderService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return OrderDetailService
     */
    public OrderDetailService CustomerOrdersItemDetailsJsonController.getOrderDetailService() {
        return orderDetailService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param orderDetailService
     */
    public void CustomerOrdersItemDetailsJsonController.setOrderDetailService(OrderDetailService orderDetailService) {
        this.orderDetailService = orderDetailService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerOrder
     */
    @ModelAttribute
    public CustomerOrder CustomerOrdersItemDetailsJsonController.getCustomerOrder(@PathVariable("customerOrder") Long id) {
        CustomerOrder customerOrder = customerOrderService.findOne(id);
        if (customerOrder == null) {
            throw new NotFoundException(String.format("CustomerOrder with identifier '%s' not found",id));
        }
        return customerOrder;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param globalSearch
     * @param pageable
     * @return ResponseEntity
     */
    @GetMapping(name = "listDetails")
    public ResponseEntity<Page<OrderDetail>> CustomerOrdersItemDetailsJsonController.listDetails(@ModelAttribute CustomerOrder customerOrder, GlobalSearch globalSearch, Pageable pageable) {
        
        Page<OrderDetail> details = getOrderDetailService().findByCustomerOrder(customerOrder, globalSearch, pageable);
        return ResponseEntity.ok(details);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param detailsToAdd
     * @return ResponseEntity
     */
    @PostMapping(name = "addToDetails")
    public ResponseEntity<?> CustomerOrdersItemDetailsJsonController.addToDetails(@ModelAttribute CustomerOrder customerOrder, @PathVariable("detailsToAdd") OrderDetail detailsToAdd) {
        getCustomerOrderService().addToDetails(customerOrder,Collections.singleton(detailsToAdd));
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param detailsToAdd
     * @return ResponseEntity
     */
    @PostMapping(name = "addToDetailsBatch", value = "/batch")
    public ResponseEntity<?> CustomerOrdersItemDetailsJsonController.addToDetailsBatch(@ModelAttribute CustomerOrder customerOrder, @RequestBody Iterable<OrderDetail> detailsToAdd) {
        getCustomerOrderService().addToDetails(customerOrder,detailsToAdd);
        return ResponseEntity.ok().build();
    }
    
}
