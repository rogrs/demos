// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.rogrs.service.impl;

import br.com.rogrs.model.Customer;
import br.com.rogrs.model.CustomerOrder;
import br.com.rogrs.model.OrderDetail;
import br.com.rogrs.repository.CustomerOrderRepository;
import br.com.rogrs.service.api.OrderDetailService;
import br.com.rogrs.service.impl.CustomerOrderServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CustomerOrderServiceImpl_Roo_Service_Impl {
    
    declare @type: CustomerOrderServiceImpl: @Service;
    
    declare @type: CustomerOrderServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CustomerOrderRepository CustomerOrderServiceImpl.customerOrderRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private OrderDetailService CustomerOrderServiceImpl.orderDetailService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param customerOrderRepository
     * @param orderDetailService
     */
    @Autowired
    public CustomerOrderServiceImpl.new(CustomerOrderRepository customerOrderRepository, @Lazy OrderDetailService orderDetailService) {
        setCustomerOrderRepository(customerOrderRepository);
        setOrderDetailService(orderDetailService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CustomerOrderRepository
     */
    public CustomerOrderRepository CustomerOrderServiceImpl.getCustomerOrderRepository() {
        return customerOrderRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrderRepository
     */
    public void CustomerOrderServiceImpl.setCustomerOrderRepository(CustomerOrderRepository customerOrderRepository) {
        this.customerOrderRepository = customerOrderRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return OrderDetailService
     */
    public OrderDetailService CustomerOrderServiceImpl.getOrderDetailService() {
        return orderDetailService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param orderDetailService
     */
    public void CustomerOrderServiceImpl.setOrderDetailService(OrderDetailService orderDetailService) {
        this.orderDetailService = orderDetailService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param detailsToAdd
     * @return CustomerOrder
     */
    @Transactional
    public CustomerOrder CustomerOrderServiceImpl.addToDetails(CustomerOrder customerOrder, Iterable<OrderDetail> detailsToAdd) {
        customerOrder.addToDetails(detailsToAdd);
        return getCustomerOrderRepository().save(customerOrder);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param detailsToRemove
     * @return CustomerOrder
     */
    @Transactional
    public CustomerOrder CustomerOrderServiceImpl.removeFromDetails(CustomerOrder customerOrder, Iterable<Long> detailsToRemove) {
        List<OrderDetail> details = getOrderDetailService().findAll(detailsToRemove);
        customerOrder.removeFromDetails(details);
        return getCustomerOrderRepository().save(customerOrder);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     */
    @Transactional
    public void CustomerOrderServiceImpl.delete(CustomerOrder customerOrder) {
        // Clear bidirectional many-to-one child relationship with Customer
        if (customerOrder.getCustomer() != null) {
            customerOrder.getCustomer().getOrders().remove(customerOrder);
        }
        
        // Clear bidirectional one-to-many parent relationship with OrderDetail
        for (OrderDetail item : customerOrder.getDetails()) {
            item.setCustomerOrder(null);
        }
        
        getCustomerOrderRepository().delete(customerOrder);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<CustomerOrder> CustomerOrderServiceImpl.save(Iterable<CustomerOrder> entities) {
        return getCustomerOrderRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void CustomerOrderServiceImpl.delete(Iterable<Long> ids) {
        List<CustomerOrder> toDelete = getCustomerOrderRepository().findAll(ids);
        getCustomerOrderRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return CustomerOrder
     */
    @Transactional
    public CustomerOrder CustomerOrderServiceImpl.save(CustomerOrder entity) {
        return getCustomerOrderRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerOrder
     */
    public CustomerOrder CustomerOrderServiceImpl.findOne(Long id) {
        return getCustomerOrderRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerOrder
     */
    public CustomerOrder CustomerOrderServiceImpl.findOneForUpdate(Long id) {
        return getCustomerOrderRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<CustomerOrder> CustomerOrderServiceImpl.findAll(Iterable<Long> ids) {
        return getCustomerOrderRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<CustomerOrder> CustomerOrderServiceImpl.findAll() {
        return getCustomerOrderRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long CustomerOrderServiceImpl.count() {
        return getCustomerOrderRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<CustomerOrder> CustomerOrderServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getCustomerOrderRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<CustomerOrder> CustomerOrderServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getCustomerOrderRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customer
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<CustomerOrder> CustomerOrderServiceImpl.findByCustomer(Customer customer, GlobalSearch globalSearch, Pageable pageable) {
        return getCustomerOrderRepository().findByCustomer(customer, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customer
     * @return Long
     */
    public long CustomerOrderServiceImpl.countByCustomer(Customer customer) {
        return getCustomerOrderRepository().countByCustomer(customer);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<CustomerOrder> CustomerOrderServiceImpl.getEntityType() {
        return CustomerOrder.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> CustomerOrderServiceImpl.getIdType() {
        return Long.class;
    }
    
}
