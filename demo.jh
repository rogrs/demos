entity Region {
	regionName String
}

entity Country {
	countryName String
}

entity Location {
	streetAddress String,
	postalCode String,
	city String,
	stateProvince String
}

entity Department {
	departmentName String required
}


entity Task {
	title String,
	description String
}

entity Employee {

	firstName String,
	lastName String,
	email String,
	phoneNumber String,
	hireDate ZonedDateTime,
	salary Long,
	commissionPct Long
}

entity Job {
	jobTitle String,
	minSalary Long,
	maxSalary Long
}

entity JobHistory {
	startDate ZonedDateTime,
	endDate ZonedDateTime,
	language Language
}

enum Language {
    FRENCH, ENGLISH, SPANISH
}

relationship OneToOne {
	Country{region(regionName)} to Region{country}
}

relationship OneToOne {
	Location{country(countryName)} to Country{location}
}

relationship OneToOne {
	Department{location(streetAddress)} to Location{departament}
}

relationship ManyToMany {
	Job{task(title)} to Task{job}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Employee{job(jobTitle)} to Job{employee(lastName)},

	Department{employee(lastName)} to Employee{department(departmentName)}
}

relationship ManyToOne {
	Employee{manager(lastName)} to Employee
}

// defining multiple oneToOne relationships
relationship OneToOne {
	JobHistory{job(jobTitle)} to Job,
	JobHistory{department(departmentName)} to Department,
	JobHistory{employee(lastName)} to Employee
}

// Set pagination options
paginate JobHistory, Employee with infinite-scroll
paginate Job with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employee, Job
// Set an angular suffix
angularSuffix * with mySuffix
